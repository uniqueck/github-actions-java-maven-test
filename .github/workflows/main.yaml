on:
  push:
    tags-ignore:
      - '*'

jobs:
  cache_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: resolve all dependencies
        run: mvn --batch-mode dependency:go-offline

  set_version:
    needs:
      - cache_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: save pom.xml
        uses: actions/cache@v2
        with:
          path: pom.xml
          key: ${{ runner.os }}-pom.xml
      - name: extract set branch as version
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: mvn versions:set -DnewVersion=${GITHUB_REF##*/} versions:commit
      - name: extract set tag as version
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: mvn versions:set -DnewVersion=${GITHUB_REF##*/v} versions:commit

  build_and_test:
    runs-on: ubuntu-latest
    needs:
      - set_version
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: restore pom.xml
        uses: actions/cache@v2
        with:
          path: pom.xml
          key: ${{ runner.os }}-pom.xml
      - name: Build with maven
        run: mvn --batch-mode verify

  build_docs:
    needs:
      - set_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ pdf, html5 ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: restore pom.xml
        uses: actions/cache@v2
        with:
          path: pom.xml
          key: ${{ runner.os }}-pom.xml
      - name: Generate docs
        run: mvn --batch-mode org.asciidoctor:asciidoctor-maven-plugin:process-asciidoc@doc-${{ matrix.node }}
      - name: Archive documentation artifacts
        uses: actions/upload-artifact@v2
        with:
          name: documentation-${{ matrix.node }}
          path: target/generated-docs/${{ matrix.node }}/

  release:
    runs-on: ubuntu-latest
    needs:
      - build_and_test
      - build_docs
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: restore pom.xml
        uses: actions/cache@v2
        with:
          path: pom.xml
          key: ${{ runner.os }}-pom.xml
      - name: send ms teams notification
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          summary: "test"

