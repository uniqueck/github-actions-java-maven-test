on:
  push:
    tags:
      - 'v*'

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: set tag as version
        run: mvn versions:set -DnewVersion=${GITHUB_REF##*/v} versions:commit
      - name: build release
        run: mvn --batch-mode verify
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            ./target/github-actions-java-maven-test.jar
      - name: send ms teams notification
        run: |
          releaseUri="${{ steps.create_release.outputs.url }}"
          content=$(sed -e 's/:ant:/\&#x1F41B;/g' \
                           -e 's/:package:/\&#x1F4E6;/g' \
                           -e 's/:telescope:/\&#x1F52D;/g' \
                           -e 's/:broom:/\&#x1F9F9;/g' \
                           -e 's/:memo:/\&#x1F4D2;/g' \
                           release-notes.md)
          payload="{
                    \"@context\": \"https://schema.org/extensions\",
                    \"@type\": \"MessageCard\",
                    \"title\": \"&#x1F4E2; Test Release\",
                    \"text\": \"${content}\",
                    \"markdown\": true,
                    \"potentialAction\": [
                      {
                        \"@type\": \"OpenUri\",
                        \"name\": \"Download Release Artifacts here\",
                        \"targets\": [
                          { \"os\": \"default\", \"uri\": \"${releaseUri}" }
                        ]
                      }
                    ]
                  }"
          curl --location --request POST ${{ secrets.MS_TEAMS_WEBHOOK_URI }} \
                 --header 'Content-Type: application/json' \
                 --data-raw "${payload}"


